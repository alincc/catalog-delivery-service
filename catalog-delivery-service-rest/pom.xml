<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>catalog-delivery-service-rest</artifactId>
    <packaging>jar</packaging>
    <name>catalog-delivery-service-rest</name>

    <parent>
        <groupId>no.nb.microservices.delivery</groupId>
        <artifactId>catalog-delivery-service</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <start-class>no.nb.microservices.delivery.Application</start-class>
        <docker.image.prefix>nb</docker.image.prefix>
    </properties>

    <dependencies>
        <!-- Microservices -->
        <dependency>
            <groupId>no.nb.microservices.delivery</groupId>
            <artifactId>catalog-delivery-service-model</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>no.nb.microservices.pdfgenerator</groupId>
            <artifactId>catalog-pdf-generator-service-model</artifactId>
            <version>3.0.12-12</version>
        </dependency>
        <dependency>
            <groupId>no.nb.microservices.delivery.metadata</groupId>
            <artifactId>catalog-delivery-metadata-service-model</artifactId>
            <version>0.0.1-24</version>
        </dependency>
        <dependency>
            <groupId>no.nb.microservices.email</groupId>
            <artifactId>email-service-model</artifactId>
            <version>0.0.1-8</version>
        </dependency>
        <dependency>
            <groupId>no.nb.microservices.catalogitem</groupId>
            <artifactId>catalog-item-service-model</artifactId>
            <version>0.0.1-84eeae25492ff8684d24cabede290f240007749c-91</version>
        </dependency>
        <dependency>
            <groupId>no.nb.microservices</groupId>
            <artifactId>catalog-metadata-model</artifactId>
            <version>0.0.1-96</version>
        </dependency>
        <dependency>
            <groupId>no.nb.microservices.catalogsearchindex</groupId>
            <artifactId>catalog-search-index-model</artifactId>
            <version>-b30fdc37729c2568e3d8e08d8b9d291e81cc7e4a-39</version>
        </dependency>

        <!-- Utils -->
        <dependency>
            <groupId>no.nb.commons</groupId>
            <artifactId>commons-io-utils</artifactId>
            <version>-9</version>
        </dependency>

        <!-- Third party -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-hateoas</artifactId>
        </dependency> 
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!--<dependency>-->
            <!--<groupId>org.springframework.boot</groupId>-->
            <!--<artifactId>spring-boot-starter-security</artifactId>-->
        <!--</dependency>-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-oauth2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-eureka</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-feign</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-hystrix</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-config-client</artifactId>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
        </dependency>
        <dependency>
            <groupId>com.wordnik</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>1.5.3-M1</version>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
            <version>2.0.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp</groupId>
            <artifactId>mockwebserver</artifactId>
            <version>2.4.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.4</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>catalog-delivery-service</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>2.5</version>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <configuration>
                    <!-- The destination file for the code coverage report has to be set
                        to the same value in the parent pom and in each module pom. Then JaCoCo will
                        add up information in the same report, so that, it will give the cross-module
                        code coverage. -->
                    <destFile>${project.basedir}/../target/jacoco.exec</destFile>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.2.3</version>
                <configuration>
                    <imageName>${docker.image.prefix}/${project.artifactId}</imageName>
                    <dockerDirectory>src/main/docker</dockerDirectory>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
